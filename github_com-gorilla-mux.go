// Code generated by 'yaegi extract github.com/gorilla/mux'. DO NOT EDIT.

package main

import (
	"github.com/gorilla/mux"
	"reflect"
)

func init() {
	Symbols["github.com/gorilla/mux/mux"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"CORSMethodMiddleware": reflect.ValueOf(mux.CORSMethodMiddleware),
		"CurrentRoute":         reflect.ValueOf(mux.CurrentRoute),
		"ErrMethodMismatch":    reflect.ValueOf(&mux.ErrMethodMismatch).Elem(),
		"ErrNotFound":          reflect.ValueOf(&mux.ErrNotFound).Elem(),
		"NewRouter":            reflect.ValueOf(mux.NewRouter),
		"SetURLVars":           reflect.ValueOf(mux.SetURLVars),
		"SkipRouter":           reflect.ValueOf(&mux.SkipRouter).Elem(),
		"Vars":                 reflect.ValueOf(mux.Vars),

		// type definitions
		"BuildVarsFunc":  reflect.ValueOf((*mux.BuildVarsFunc)(nil)),
		"MatcherFunc":    reflect.ValueOf((*mux.MatcherFunc)(nil)),
		"MiddlewareFunc": reflect.ValueOf((*mux.MiddlewareFunc)(nil)),
		"Route":          reflect.ValueOf((*mux.Route)(nil)),
		"RouteMatch":     reflect.ValueOf((*mux.RouteMatch)(nil)),
		"Router":         reflect.ValueOf((*mux.Router)(nil)),
		"WalkFunc":       reflect.ValueOf((*mux.WalkFunc)(nil)),
	}
}
